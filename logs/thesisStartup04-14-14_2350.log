!!!!below quality measures have been removed due to insufficient data!!!!!!!!!!!!
    ' TriangleSize'

Keeping QMs:
name        p values
    ' Spread'    '2.48e-07'

    ' Limit'    '2.57e-07'

    ' OrthoNorm'    '0.000358'

Deleting QMs:
name        p values
    ' Extension'    '0.978'

    'GraspIt_Epsilon'    '0.892'

    ' Volume'    '0.537'

    'GraspIt_Volume'    '0.376'

    'GraspIt_ContactEnergy'    '0.0879'

    ' PerpSym'    '0.0627'

    ' ParallelSym'    '0.00685'

binThreshold:10

Completed iteration:1
Prediction points:49
  TP     FP     TN     FN
    13     4    10    22

Precision / Recall
    0.7647    0.3714


Completed iteration:2
Prediction points:37
  TP     FP     TN     FN
     7     4    12    14

Precision / Recall
    0.6364    0.3333


Completed iteration:3
Prediction points:35
  TP     FP     TN     FN
     4     2     2    27

Precision / Recall
    0.6667    0.1290


Completed iteration:4
Prediction points:33
  TP     FP     TN     FN
     3     2     6    22

Precision / Recall
    0.6000    0.1200


Completed iteration:5
Prediction points:17
  TP     FP     TN     FN
     3     0     5     9

Precision / Recall
    1.0000    0.2500


Completed iteration:6
Prediction points:24
  TP     FP     TN     FN
     5     3     3    13

Precision / Recall
    0.6250    0.2778


Not enough valid test points; skipping iteration.

Completed iteration:8
Prediction points:24
  TP     FP     TN     FN
     5    10     3     6

Precision / Recall
    0.3333    0.4545


Completed iteration:9
Prediction points:32
  TP     FP     TN     FN
     3     2     8    19

Precision / Recall
    0.6000    0.1364


Completed iteration:10
Prediction points:29
  TP     FP     TN     FN
     5     2     8    14

Precision / Recall
    0.7143    0.2632


Completed iteration:11
Prediction points:32
  TP     FP     TN     FN
     1     0     6    25

Precision / Recall
    1.0000    0.0385


Not enough valid test points; skipping iteration.

Completed iteration:13
Prediction points:11
  TP     FP     TN     FN
     0     1     3     7

Precision / Recall
     0     0


Completed iteration:14
Prediction points:24
  TP     FP     TN     FN
     9     1     6     8

Precision / Recall
    0.9000    0.5294


Completed iteration:15
Prediction points:21
  TP     FP     TN     FN
     0     2     9    10

Precision / Recall
     0     0


Completed iteration:16
Prediction points:46
  TP     FP     TN     FN
    11     6     6    23

Precision / Recall
    0.6471    0.3235


Completed iteration:17
Prediction points:39
  TP     FP     TN     FN
    20     6     5     8

Precision / Recall
    0.7692    0.7143


Completed iteration:18
Prediction points:59
  TP     FP     TN     FN
    15     6    16    22

Precision / Recall
    0.7143    0.4054


Completed iteration:19
Prediction points:53
  TP     FP     TN     FN
     7     1    10    35

Precision / Recall
    0.8750    0.1667


Completed iteration:20
Prediction points:18
  TP     FP     TN     FN
     7     0     3     8

Precision / Recall
    1.0000    0.4667


Completed iteration:21
Prediction points:17
  TP     FP     TN     FN
     2     2     9     4

Precision / Recall
    0.5000    0.3333


Completed iteration:22
Prediction points:11
  TP     FP     TN     FN
     2     1     3     5

Precision / Recall
    0.6667    0.2857


Completed iteration:23
Prediction points:71
  TP     FP     TN     FN
    13     4    17    37

Precision / Recall
    0.7647    0.2600


Completed iteration:24
Prediction points:36
  TP     FP     TN     FN
    11     0     9    16

Precision / Recall
    1.0000    0.4074


Completed iteration:25
Prediction points:39
  TP     FP     TN     FN
    13     2     7    17

Precision / Recall
    0.8667    0.4333


Completed iteration:26
Prediction points:24
  TP     FP     TN     FN
     1     0     8    15

Precision / Recall
    1.0000    0.0625


Completed iteration:27
Prediction points:27
  TP     FP     TN     FN
     3     2    11    11

Precision / Recall
    0.6000    0.2143


Completed iteration:28
Prediction points:22
  TP     FP     TN     FN
     6     0     5    11

Precision / Recall
    1.0000    0.3529


Completed iteration:29
Prediction points:38
  TP     FP     TN     FN
    15     1     8    14

Precision / Recall
    0.9375    0.5172


Completed iteration:30
Prediction points:13
  TP     FP     TN     FN
     2     3     6     2

Precision / Recall
    0.4000    0.5000

if system_dependent('IsDebugMode')==1, dbquit; end
figure(confidence_cutoff*10+1);
    contourf(contour_values);
    ylabel('PCA2');
    xlabel('PCA1');
    title(sprintf('GP for energy kd-tree hybrid, energy=%d, conf. cutoff=%f',energycutoff,confidence_cutoff));
figure(confidence_cutoff*10+1);
    contourf(contour_values);
    axis([PCA_min(1) PCA_max(1) PCA_min(2) PCA_max(2)])
    ylabel('PCA2');
    xlabel('PCA1');
    title(sprintf('GP for energy kd-tree hybrid, energy=%d, conf. cutoff=%f',energycutoff,confidence_cutoff));
colormap([1 1 1; 0 1 0])
figure(confidence_cutoff*10+1);
    colormap([1 1 1; 0 1 0]);
    contourf(contour_values);
    ylabel('PCA2 (not to scale)');
    xlabel('PCA1 (not to scale)');
    title(sprintf('GP for energy kd-tree hybrid, energy=%d, conf. cutoff=%f',energycutoff,confidence_cutoff));
figure(confidence_cutoff*10+1);
    colormap([1 1 1; 0 .5 0; 0 1 0]);
    contourf(contour_values);
    ylabel('PCA2 (not to scale)');
    xlabel('PCA1 (not to scale)');
    title(sprintf('GP for energy kd-tree hybrid, energy=%d, conf. cutoff=%f',energycutoff,confidence_cutoff));
tree

tree = 

    [2.3224]    {1x4 cell}    {1x4 cell}    [2]

disp(getAllBins(tree))
{Undefined function 'getAllBins' for input arguments of type 'cell'.
} 
disp(kdGetAllBins(tree))
    [ 4x3 double]    [ 2]
    [10x3 double]    [ 2]
    [ 5x3 double]    [ 3]
    [ 3x3 double]    [ 4]
    [ 3x3 double]    [ 5]
    [ 3x3 double]    [ 6]
    [ 4x3 double]    [ 7]
    [ 9x3 double]    [ 7]
    [ 3x3 double]    [ 4]
    [ 8x3 double]    [ 5]
    [ 3x3 double]    [ 6]
    [ 8x3 double]    [ 6]
    [ 6x3 double]    [ 5]
    [ 4x3 double]    [ 7]
    [10x3 double]    [ 9]
    [ 2x3 double]    [ 9]
    [ 8x3 double]    [ 8]
    [ 3x3 double]    [ 8]
    [10x3 double]    [ 8]
    [10x3 double]    [ 8]
    [10x3 double]    [ 8]
    [ 8x3 double]    [ 6]
    [ 7x3 double]    [ 7]
    [ 3x3 double]    [ 8]
    [ 9x3 double]    [ 8]
    [ 3x3 double]    [ 6]
    [10x3 double]    [ 8]
    [ 6x3 double]    [10]
    [ 5x3 double]    [11]
    [ 4x3 double]    [12]
    [ 9x3 double]    [12]
    [ 8x3 double]    [10]
    [ 8x3 double]    [11]
    [ 4x3 double]    [12]
    [ 4x3 double]    [13]
    [10x3 double]    [13]
    [ 8x3 double]    [ 8]
    [ 8x3 double]    [ 9]
    [ 4x3 double]    [ 9]

bins = kdGetAllBins(tree)

bins = 

    [ 4x3 double]    [ 2]
    [10x3 double]    [ 2]
    [ 5x3 double]    [ 3]
    [ 3x3 double]    [ 4]
    [ 3x3 double]    [ 5]
    [ 3x3 double]    [ 6]
    [ 4x3 double]    [ 7]
    [ 9x3 double]    [ 7]
    [ 3x3 double]    [ 4]
    [ 8x3 double]    [ 5]
    [ 3x3 double]    [ 6]
    [ 8x3 double]    [ 6]
    [ 6x3 double]    [ 5]
    [ 4x3 double]    [ 7]
    [10x3 double]    [ 9]
    [ 2x3 double]    [ 9]
    [ 8x3 double]    [ 8]
    [ 3x3 double]    [ 8]
    [10x3 double]    [ 8]
    [10x3 double]    [ 8]
    [10x3 double]    [ 8]
    [ 8x3 double]    [ 6]
    [ 7x3 double]    [ 7]
    [ 3x3 double]    [ 8]
    [ 9x3 double]    [ 8]
    [ 3x3 double]    [ 6]
    [10x3 double]    [ 8]
    [ 6x3 double]    [10]
    [ 5x3 double]    [11]
    [ 4x3 double]    [12]
    [ 9x3 double]    [12]
    [ 8x3 double]    [10]
    [ 8x3 double]    [11]
    [ 4x3 double]    [12]
    [ 4x3 double]    [13]
    [10x3 double]    [13]
    [ 8x3 double]    [ 8]
    [ 8x3 double]    [ 9]
    [ 4x3 double]    [ 9]

size(bins,1)

ans =

    39

bins(1,:)

ans = 

    [4x3 double]    [2]

bins(:,1)

ans = 

    [ 4x3 double]
    [10x3 double]
    [ 5x3 double]
    [ 3x3 double]
    [ 3x3 double]
    [ 3x3 double]
    [ 4x3 double]
    [ 9x3 double]
    [ 3x3 double]
    [ 8x3 double]
    [ 3x3 double]
    [ 8x3 double]
    [ 6x3 double]
    [ 4x3 double]
    [10x3 double]
    [ 2x3 double]
    [ 8x3 double]
    [ 3x3 double]
    [10x3 double]
    [10x3 double]
    [10x3 double]
    [ 8x3 double]
    [ 7x3 double]
    [ 3x3 double]
    [ 9x3 double]
    [ 3x3 double]
    [10x3 double]
    [ 6x3 double]
    [ 5x3 double]
    [ 4x3 double]
    [ 9x3 double]
    [ 8x3 double]
    [ 8x3 double]
    [ 4x3 double]
    [ 4x3 double]
    [10x3 double]
    [ 8x3 double]
    [ 8x3 double]
    [ 4x3 double]

mean(size(bins(:,1),1))

ans =

    39

size(bins(:,1),1)

ans =

    39

bsxfun(@size,bins(:,1),1)
{Error using <a href="matlab:helpUtils.errorDocCallback('bsxfun')" style="font-weight:bold">bsxfun</a>
Operands must be numeric arrays.
} 
fprintf('Number of bins: %d',size(bins,1));
Number of bins: 39        bin_size_sum = 0;
        for i = 1:size(bins,1)
            bin_size_sum = bin_size_sum + size(bins(i,1));
        end
        fprintf('Average bin size: %d',bin_size_sum / size(bins,1));
Average bin size: 1Average bin size: 1
fprintf('Number of bins: %d',size(bins,1));
Number of bins: 39        bin_size_sum = 0;
        for i = 1:size(bins,1)
            bin_size_sum = bin_size_sum + size(bins(i,1));
        end
        fprintf('Average bin size: %d',bin_size_sum);
Average bin size: 39Average bin size: 39bins(2,1)

ans = 

    [10x3 double]

size(bins(2,1),1)

ans =

     1

size(bins{2,1},1)

ans =

    10

sum(bins{:,1})
{Error using <a href="matlab:helpUtils.errorDocCallback('sum')" style="font-weight:bold">sum</a>
Too many input arguments.
} 
bins{:,1}

ans =

    5.6035    5.3223         0
    5.2885    3.8887         0
    5.5077    2.9239    1.0000
    2.5073    2.5188    1.0000


ans =

    2.3814   -0.7746         0
    2.5301    0.3140    1.0000
    6.0582    0.8391    1.0000
    5.3890    0.7741    1.0000
    4.6387    0.1348    1.0000
    3.5284   -0.0607    1.0000
    3.1682    1.3433    1.0000
    4.1817    0.1360    1.0000
    3.6706    0.0071         0
    3.5333   -0.3377         0


ans =

    0.6616    2.1344    1.0000
   -0.2234    1.6736         0
    0.9285    2.2138    1.0000
    0.3531    1.8544         0
    0.2671    2.0161    1.0000


ans =

   -1.2703    3.7375    1.0000
   -1.4134    3.4948         0
   -1.1914    3.1602         0


ans =

   -0.5871    1.6369    1.0000
   -0.3935    1.4656    1.0000
   -0.6103    1.5658    1.0000


ans =

   -0.7474    1.5780    1.0000
   -0.7706    1.5618         0
   -0.7416    1.5971    1.0000


ans =

   -0.9350    1.4579    1.0000
   -0.9434    1.4556    1.0000
   -0.9357    1.4708    1.0000
   -0.9121    1.4816    1.0000


ans =

   -1.0281    1.4428    1.0000
   -1.0257    1.4272    1.0000
   -1.0425    1.4738         0
   -1.0242    1.4262    1.0000
   -1.0425    1.4738    1.0000
   -1.0065    1.4131    1.0000
   -1.0309    1.4605         0
   -1.0209    1.4654         0
   -1.0439    1.4029         0


ans =

    0.7272    0.3129    1.0000
    0.8114    0.3502    1.0000
    1.1937    1.2027    1.0000


ans =

    2.1948   -0.4600    1.0000
    2.2456   -0.8261    1.0000
    2.3121   -0.7465    1.0000
    2.2167   -0.8370    1.0000
    2.1600   -0.8585    1.0000
    1.6431   -0.2475    1.0000
    1.5722    0.0304         0
    1.7913   -0.0852         0


ans =

    1.3889    0.0942         0
    0.9411   -0.2831    1.0000
    1.2123   -0.3227    1.0000


ans =

    1.3487   -0.4860    1.0000
    0.9777   -0.6774    1.0000
    0.8299   -0.4608    1.0000
    1.0632   -0.4600    1.0000
    0.7791   -0.6314    1.0000
    0.9072   -0.4000    1.0000
    0.8818   -0.6672         0
    0.8315   -0.7959    1.0000


ans =

   -0.0863    1.2055    1.0000
   -0.4976    0.3966    1.0000
   -0.1014    0.8962    1.0000
    0.1528    0.8953    1.0000
    0.1236    0.9068    1.0000
   -0.4219    0.3940         0


ans =

   -0.7413    1.1224    1.0000
   -0.8141    1.2357    1.0000
   -0.8498    1.2610    1.0000
   -0.5430    1.2728         0


ans =

   -1.0125    1.2556    1.0000
   -0.9519    1.3244    1.0000
   -1.0491    1.3977    1.0000
   -1.0246    1.3261    1.0000
   -0.9687    1.2733    1.0000
   -1.0312    1.3577         0
   -0.9256    1.3360    1.0000
   -1.0039    1.1937    1.0000
   -1.0206    1.4015    1.0000
   -0.9301    1.1864         0


ans =

   -1.1752    1.3827    1.0000
   -1.0982    1.3394    1.0000


ans =

   -0.9543    0.9801    3.0000
   -0.9138    1.0011    2.0000
   -0.9221    0.9833    3.0000
   -0.8608    0.8920         0
   -1.0122    1.0350    2.0000
   -1.0145    1.0550    3.0000
   -0.9838    0.9035    2.0000
   -0.9191    0.8282    3.0000


ans =

   -0.7718    0.4929    1.0000
   -0.5495    0.7422         0
   -0.7124    0.5293    1.0000


ans =

   -0.7438    0.2478    1.0000
   -0.7606    0.3259    1.0000
   -0.7755    0.2526    3.0000
   -0.7547    0.2872    1.0000
   -0.7352    0.2426    1.0000
   -0.6670    0.2778    1.0000
   -0.7946    0.3534    2.0000
   -0.7490    0.2452         0
   -0.6965    0.3363         0
   -0.7424    0.2531    1.0000


ans =

   -0.8946    0.5624    3.0000
   -1.0400    0.7017         0
   -0.9809    0.7437    3.0000
   -0.9036    0.6242    3.0000
   -0.9702    0.8113    3.0000
   -0.8678    0.7661    2.0000
   -0.9776    0.7472    3.0000
   -0.8215    0.8131    1.0000
   -0.8056    0.5553    3.0000
   -0.8410    0.8114    1.0000


ans =

   -0.8185    0.3876    3.0000
   -0.8398    0.4854    3.0000
   -0.8191    0.3480    3.0000
   -0.8381    0.2935    3.0000
   -0.8088    0.5253    3.0000
   -0.7959    0.2509    3.0000
   -0.8576    0.4340    2.0000
   -0.7962    0.2721    3.0000
   -0.8247    0.2702    3.0000
   -0.8535    0.4352    3.0000


ans =

    0.0619   -0.5727    1.0000
   -0.1102   -0.5704    1.0000
    0.1065   -0.3529    1.0000
    0.5683   -0.5751    1.0000
    0.4344   -0.2888         0
   -0.0189   -0.3479    1.0000
    0.3352   -0.2625         0
   -0.1127   -0.5063         0


ans =

    0.2448   -0.7313    1.0000
    0.4127   -0.6447    1.0000
    0.2328   -0.8036    1.0000
    0.1919   -0.6910    1.0000
    0.2076   -0.8308    1.0000
    0.2639   -0.7763    1.0000
    0.1696   -0.7149         0


ans =

    0.0753   -0.6311    1.0000
    0.1028   -0.7175    1.0000
    0.1011   -0.7022    1.0000


ans =

   -0.0510   -0.7758    1.0000
   -0.1005   -0.9154    1.0000
    0.1281   -0.7954    1.0000
    0.1001   -0.9127    1.0000
   -0.0457   -0.8482    1.0000
   -0.0152   -0.9155    1.0000
    0.0938   -0.9164    1.0000
   -0.0168   -0.7937    1.0000
    0.0504   -0.8656    1.0000


ans =

   -0.4965    0.2202    1.0000
   -0.3950   -0.2812    1.0000
   -0.7981    0.2333    2.0000


ans =

   -0.1727   -0.5136    1.0000
   -0.3165   -0.5322    1.0000
   -0.2413   -0.6510    1.0000
   -0.2964   -0.4437    1.0000
   -0.1347   -0.5912    1.0000
   -0.2229   -0.3904         0
   -0.3355   -0.4598    1.0000
   -0.2467   -0.4707    1.0000
   -0.1190   -0.5911         0
   -0.2920   -0.6061    1.0000


ans =

   -0.2038   -0.7746    1.0000
   -0.2396   -0.6961    1.0000
   -0.1795   -0.7284    1.0000
   -0.1963   -0.7363    1.0000
   -0.1728   -0.7566         0
   -0.2278   -0.8008         0


ans =

   -0.1821   -0.9159    1.0000
   -0.1440   -0.8871    1.0000
   -0.1909   -0.8694    1.0000
   -0.1834   -0.9120         0
   -0.1671   -0.9058         0


ans =

   -0.2167   -0.8480    1.0000
   -0.2286   -0.8259    1.0000
   -0.2334   -0.8433    1.0000
   -0.2115   -0.8123    1.0000


ans =

   -0.2437   -0.9257    1.0000
   -0.2276   -0.9155    1.0000
   -0.2105   -0.9265    1.0000
   -0.2248   -0.9227         0
   -0.2368   -0.9147    1.0000
   -0.2093   -0.8843         0
   -0.2017   -0.9247    1.0000
   -0.2431   -0.8945         0
   -0.1996   -0.8875         0


ans =

   -0.3087   -0.7841         0
   -0.2621   -0.7845         0
   -0.3083   -0.7617    1.0000
   -0.2975   -0.7893    1.0000
   -0.2979   -0.7419    1.0000
   -0.2833   -0.6933    1.0000
   -0.3356   -0.7473    1.0000
   -0.3236   -0.7817         0


ans =

   -0.2501   -0.8315    1.0000
   -0.2899   -0.9211    1.0000
   -0.2783   -0.8914    1.0000
   -0.2526   -0.9198    1.0000
   -0.2581   -0.9238         0
   -0.2627   -0.8971    1.0000
   -0.2644   -0.9272         0
   -0.2584   -0.9245    1.0000


ans =

   -0.3210   -0.8651    1.0000
   -0.3391   -0.8297         0
   -0.3081   -0.8184         0
   -0.3434   -0.8288         0


ans =

   -0.3018   -0.9285    1.0000
   -0.3130   -0.9235         0
   -0.3144   -0.9283    1.0000
   -0.3109   -0.9021    1.0000


ans =

   -0.3263   -0.9266    1.0000
   -0.3336   -0.9305    1.0000
   -0.3383   -0.8830    1.0000
   -0.3257   -0.9299    1.0000
   -0.3489   -0.9305    1.0000
   -0.3362   -0.9141         0
   -0.3373   -0.9263    1.0000
   -0.3309   -0.9283    1.0000
   -0.3394   -0.8764         0
   -0.3302   -0.9226    1.0000


ans =

   -0.3945   -0.5429    1.0000
   -0.3845   -0.3903    1.0000
   -0.3743   -0.6245    1.0000
   -0.3828   -0.6184         0
   -0.5830   -0.3569    1.0000
   -0.4107   -0.6424    1.0000
   -0.3792   -0.6360         0
   -0.3982   -0.4605         0


ans =

   -0.3579   -0.8208    1.0000
   -0.3864   -0.7080    1.0000
   -0.3954   -0.7440    1.0000
   -0.3944   -0.9301    1.0000
   -0.3557   -0.8163    1.0000
   -0.3704   -0.9313    1.0000
   -0.3647   -0.9136    1.0000
   -0.3757   -0.9307    1.0000


ans =

   -0.4408   -0.9333    1.0000
   -0.4414   -0.9275    1.0000
   -0.4198   -0.6820    1.0000
   -0.4315   -0.8634         0

sum(size(bins{:,1},1))
{Error using <a href="matlab:helpUtils.errorDocCallback('size')" style="font-weight:bold">size</a>
Too many input arguments.
} 
fprintf('Number of bins: %d',size(bins,1));
Number of bins: 39        bin_size_sum = 0;
        for i = 1:size(bins,1)
            bin_size_sum = bin_size_sum + size(bins{i,1},1);
        end
        fprintf('Average bin size: %d',bin_size_sum / size(bins,1));
Average bin size: 6.256410e+00runBatchEnergyHybrid
    30

    10

    30

    15

    30

    20

    40

    10

    40

    15

    40

    20

    50

    10

    50

    15

    50

    20

    60

    10

    60

    15

    60

    20

figure(confidence_cutoff*10+1);
    colormap([1 1 1; .5 1 .5; 0 1 0]);
    contourf(contour_values);
    ylabel('PCA2 (not to scale)');
    xlabel('PCA1 (not to scale)');
    title(sprintf('GP for energy kd-tree hybrid, energy=%d, conf. cutoff=%f',energycutoff,confidence_cutoff));
h = figure(confidence_cutoff*10+1);
    colormap([1 1 1; .5 1 .5; 0 1 0]);
    contourf(contour_values);
    ylabel('PCA2 (not to scale)');
    xlabel('PCA1 (not to scale)');
    title(sprintf('GP for energy kd-tree hybrid, energy=%d, conf. cutoff=%f',energycutoff,confidence_cutoff));
print(h,'-djpeg','myjpg.jpg')
print(h,'-djpeg',sprintf('contour_kdhybrid_energy_%d_conf_%d_bin_%d',energycutoff,confidence_cutoff*10,binThreshold));
print(h,'-djpeg',strcat(savedir,'hybrid_contours\',sprintf('contour_kdhybrid_energy_%d_conf_%d_bin_%d',energycutoff,confidence_cutoff*10,binThreshold)));
h = figure(confidence_cutoff*10+1);
    colormap([1 1 1; .5 1 .5; 0 1 0]);
    contourf(contour_values);
    ylabel('PCA2 (not to scale)');
    xlabel('PCA1 (not to scale)');
    title(sprintf('GP for energy kd-tree hybrid, energy=%d, conf. cutoff=%f, binSize=%d',energycutoff,confidence_cutoff,binThreshold));
    print(h,'-djpeg',strcat(savedir,'hybrid_contours\',sprintf('contour_kdhybrid_energy_%d_conf_%d_bin_%d',energycutoff,confidence_cutoff*10,binThreshold)));
30:10:60

ans =

    30    40    50    60

runBatchEnergyHybrid
    30

    10

[Warning: Directory access failure: Z:\Thesis\thesisStartup.m] 
[> In <a href="matlab: opentoline('C:\Program Files\MATLAB\R2013b\toolbox\matlab\general\path.m',110,1)">path at 110</a>
  In <a href="matlab: opentoline('C:\Program Files\MATLAB\R2013b\toolbox\matlab\general\addpath.m',87,1)">addpath at 87</a>
  In <a href="matlab: opentoline('Z:\Thesis\GP_GraspIt_TP_hybrid_kdtree.m',12,1)">GP_GraspIt_TP_hybrid_kdtree at 12</a>
  In <a href="matlab: opentoline('Z:\Thesis\runBatchEnergyHybrid.m',5,1)">runBatchEnergyHybrid at 5</a>] 
[Warning: Directory access failure: Z:\Thesis\thesisCleanup.m] 
[> In <a href="matlab: opentoline('C:\Program Files\MATLAB\R2013b\toolbox\matlab\general\path.m',110,1)">path at 110</a>
  In <a href="matlab: opentoline('C:\Program Files\MATLAB\R2013b\toolbox\matlab\general\addpath.m',87,1)">addpath at 87</a>
  In <a href="matlab: opentoline('Z:\Thesis\GP_GraspIt_TP_hybrid_kdtree.m',13,1)">GP_GraspIt_TP_hybrid_kdtree at 13</a>
  In <a href="matlab: opentoline('Z:\Thesis\runBatchEnergyHybrid.m',5,1)">runBatchEnergyHybrid at 5</a>] 
